import { ethers }  from 'ethers';
const fs = require("fs");
require('dotenv').config({ path: 'src/RawTX/.env' });

const abiPath = "src/ABIS/nativeAdapter.json"; 
const contractABI = JSON.parse(fs.readFileSync(abiPath, "utf8"));
const hexValue = "0x92f34455bc0";
const valueInWei = ethers.BigNumber.from(hexValue);

async function sendSignedTransactionWithRawData() {
  const provider = new ethers.providers.JsonRpcProvider(process.env.PROVIDER_URL);
  const wallet = new ethers.Wallet(process.env.PRIVATE_KEY as string, provider);

  const contractAddress = '0xc8d25C177c126326c5FD7a50A60ED98098399179';  // Replace with the contract address
  const value = valueInWei;  
  
  const rawData = '0xc03bb9080000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000124f8000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000002401e44f2389e0bc34c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000009a17fa0a2824ea855ec6ad3eab3aa2516ec6626d00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000009184e72a0000000000000000000000000001307bd6ea044bede2f48acc400cc856a6328172200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000a4586f2a220000000000000000000000009a17fa0a2824ea855ec6ad3eab3aa2516ec6626d00000000000000000000000000000000000000000000000000000000000003f800000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000008537472696e67313600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000';

  const gasPrice = await provider.getGasPrice();
  const gasLimit = 300000;  
  const nonce = await provider.getTransactionCount(wallet.address);

  const tx = {
      to: contractAddress,
      value: value,  
      data: rawData,  
      gasPrice: gasPrice,
      gasLimit: ethers.utils.hexlify(gasLimit),
      nonce: nonce
  };

  // Sign the transaction with your wallet
  const signedTx = await wallet.signTransaction(tx);

  // Send the signed transaction
  const txResponse = await provider.sendTransaction(signedTx);
  console.log(`Transaction sent: ${txResponse.hash}`);

  // Wait for the transaction to be confirmed
  const receipt = await txResponse.wait();
  console.log(`Transaction confirmed in block: ${receipt.blockNumber}`);
}

sendSignedTransactionWithRawData().catch((error) => {
  console.error('Error sending transaction:', error);
});